aprold@aproldpc:~$ cd /home/aprold/CLionProjects/c_projects/lab10
aprold@aproldpc:~/CLionProjects/c_projects/lab10$ ls
cmake-build-debug  CMakeLists.txt  main.c
aprold@aproldpc:~/CLionProjects/c_projects/lab10$ cat main.c
#include <stdio.h>

int F(int n);
int G(int n);

int main() {
    int n = 5;
    int res = F(n);
    printf("%d", res);
    return 0;
}

int F(int n) {
    if (n==1) {
        return 1;
    }
    int b = 2*F(n-1);
    b += G(n-1)-2*n;
    return b;
}

int G(int n) {
    if (n==1) {
        return 1;
    }
    int a = F(n-1);
    a += 2*G(n-1)+n;
    return a;
}

aprold@aproldpc:~/CLionProjects/c_projects/lab10$ gcc -ggdb main.c
aprold@aproldpc:~/CLionProjects/c_projects/lab10$ ls
a.out  cmake-build-debug  CMakeLists.txt  main.c
aprold@aproldpc:~/CLionProjects/c_projects/lab10$ gdb ./a.out
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...
(gdb) run
Starting program: /home/aprold/CLionProjects/c_projects/lab10/a.out 
11[Inferior 1 (process 6628) exited normally]


-----ДЕМОНСТРАЦИЯ list-----


(gdb) list 10
5	
6	int main() {
7	    int n = 5;
8	    int res = F(n);
9	    printf("%d", res);
10	    return 0;
11	}
12	
13	int F(int n) {
14	    if (n==1) {
(gdb) list G
17	    int b = 2*F(n-1);
18	    b += G(n-1)-2*n;
19	    return b;
20	}
21	
22	int G(int n) {
23	    if (n==1) {
24	        return 1;
25	    }
26	    int a = F(n-1);
(gdb) 
27	    a += 2*G(n-1)+n;
28	    return a;
29	}



-----ДЕМОНСТРАЦИЯ breakpoint, print, set var-----


(gdb) b 8
Breakpoint 1 at 0x115c: file main.c, line 8.
(gdb) r
Starting program: /home/aprold/CLionProjects/c_projects/lab10/a.out 

Breakpoint 1, main () at main.c:8
8	    int res = F(n);
(gdb) print n
$1 = 5
(gdb) set var n = 15
(gdb) print n
$2 = 15
(gdb) p F(10)
$3 = 7303
(gdb) c
Continuing.
1793439[Inferior 1 (process 2759) exited normally]



-----ДЕМОНСТРАЦИЯ next, step-----


(gdb) r
Starting program: /home/aprold/CLionProjects/c_projects/lab10/a.out 

Breakpoint 1, main () at main.c:8
8	    int res = F(n);
(gdb) n
9	    printf("%d", res);
(gdb) c
Continuing.
11[Inferior 1 (process 2765) exited normally]
(gdb) r
Starting program: /home/aprold/CLionProjects/c_projects/lab10/a.out 

Breakpoint 1, main () at main.c:8
8	    int res = F(n);
(gdb) s
F (n=21845) at main.c:13
13	int F(int n) {
(gdb) 
14	    if (n==1) {
(gdb) 
17	    int b = 2*F(n-1);
(gdb) 
F (n=0) at main.c:13
13	int F(int n) {
(gdb) n
14	    if (n==1) {
(gdb) 
17	    int b = 2*F(n-1);
(gdb) 
18	    b += G(n-1)-2*n;
(gdb) 
19	    return b;
(gdb) 
20	}
(gdb) 
F (n=5) at main.c:17
17	    int b = 2*F(n-1);
(gdb) 
18	    b += G(n-1)-2*n;
(gdb) c
Continuing.
11[Inferior 1 (process 2766) exited normally]
(gdb) 



-----ДЕМОНСТРАЦИЯ backtrace, continue-----


(gdb) list F
8	    int res = F(n);
9	    printf("%d", res);
10	    return 0;
11	}
12	
13	int F(int n) {
14	    if (n==1) {
15	        return 1;
16	    }
17	    int b = 2*F(n-1);
(gdb) b 15
Breakpoint 2 at 0x55555555519b: file main.c, line 15.
(gdb) list G
17	    int b = 2*F(n-1);
18	    b += G(n-1)-2*n;
19	    return b;
20	}
21	
22	int G(int n) {
23	    if (n==1) {
24	        return 1;
25	    }
26	    int a = F(n-1);
(gdb) b 24
Breakpoint 3 at 0x5555555551e5: file main.c, line 24.
(gdb) r
Starting program: /home/aprold/CLionProjects/c_projects/lab10/a.out 

Breakpoint 1, main () at main.c:8
8	    int res = F(n);
(gdb) bt
#0  main () at main.c:8
(gdb) s
F (n=21845) at main.c:13
13	int F(int n) {
(gdb) 
14	    if (n==1) {
(gdb) bt
#0  F (n=5) at main.c:14
#1  0x0000555555555166 in main () at main.c:8
(gdb) s
17	    int b = 2*F(n-1);
(gdb) s
F (n=0) at main.c:13
13	int F(int n) {
(gdb) 
14	    if (n==1) {
(gdb) bt
#0  F (n=4) at main.c:14
#1  0x00005555555551af in F (n=5) at main.c:17
#2  0x0000555555555166 in main () at main.c:8
(gdb) c
Continuing.

Breakpoint 2, F (n=1) at main.c:15
15	        return 1;
(gdb) bt
#0  F (n=1) at main.c:15
#1  0x00005555555551af in F (n=2) at main.c:17
#2  0x00005555555551af in F (n=3) at main.c:17
#3  0x00005555555551af in F (n=4) at main.c:17
#4  0x00005555555551af in F (n=5) at main.c:17
#5  0x0000555555555166 in main () at main.c:8
(gdb) s
20	}
(gdb) 
F (n=2) at main.c:17
17	    int b = 2*F(n-1);
(gdb) bt
#0  F (n=2) at main.c:17
#1  0x00005555555551af in F (n=3) at main.c:17
#2  0x00005555555551af in F (n=4) at main.c:17
#3  0x00005555555551af in F (n=5) at main.c:17
#4  0x0000555555555166 in main () at main.c:8
(gdb) s
18	    b += G(n-1)-2*n;
(gdb) 
G (n=1) at main.c:22
22	int G(int n) {
(gdb) 
23	    if (n==1) {
(gdb) bt
#0  G (n=1) at main.c:23
#1  0x00005555555551c1 in F (n=2) at main.c:18
#2  0x00005555555551af in F (n=3) at main.c:17
#3  0x00005555555551af in F (n=4) at main.c:17
#4  0x00005555555551af in F (n=5) at main.c:17
#5  0x0000555555555166 in main () at main.c:8
(gdb) c
Continuing.

Breakpoint 3, G (n=1) at main.c:24
24	        return 1;
(gdb) 
Continuing.

Breakpoint 2, F (n=1) at main.c:15
15	        return 1;
(gdb) bt
#0  F (n=1) at main.c:15
#1  0x00005555555551f9 in G (n=2) at main.c:26
#2  0x00005555555551c1 in F (n=3) at main.c:18
#3  0x00005555555551af in F (n=4) at main.c:17
#4  0x00005555555551af in F (n=5) at main.c:17
#5  0x0000555555555166 in main () at main.c:8
(gdb) c
Continuing.

Breakpoint 3, G (n=1) at main.c:24
24	        return 1;
(gdb) 
Continuing.

Breakpoint 2, F (n=1) at main.c:15
15	        return 1;
(gdb) 
Continuing.

Breakpoint 3, G (n=1) at main.c:24
24	        return 1;
(gdb) bt
#0  G (n=1) at main.c:24
#1  0x00005555555551c1 in F (n=2) at main.c:18
#2  0x00005555555551f9 in G (n=3) at main.c:26
#3  0x00005555555551c1 in F (n=4) at main.c:18
#4  0x00005555555551af in F (n=5) at main.c:17
#5  0x0000555555555166 in main () at main.c:8
(gdb) del 2
(gdb) del 3
(gdb) c
Continuing.
11[Inferior 1 (process 3137) exited normally]
(gdb) quit
aprold@aproldpc:~/CLionProjects/c_projects/lab10$ 

